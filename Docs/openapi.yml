openapi: "3.0.2"
info:
  title: "Captions Check"
  version: "1.0"
  description: ""
servers:
  - url: http://127.0.0.1:5001/functions-test-6da7a/us-central1/app

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    User:
      description: "人員資訊"
      type: object
      properties:
        displayName:
          type: string
          example: "小白"
        email:
          type: string
          example: "little.white.liar@gmail.com"
        createDate:
          type: string
          format: date-time
          example: "2016-08-29T09:12:33.001Z"
        groups:
          type: array
          items:
            $ref: "#/components/schemas/Group"
        isActive:
          type: boolean
          default: true
    Group:
      description: "群組：成員可檢視內部所有字幕任務清單"
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          pattern: '^[A-Za-z0-9]{20}$'
          example: 9q50NMFsL2XQ9wxny6Qv
        name:
          type: string
          example: "兔兔教"
        description:
          type: string
          example: "哈囉直播字幕校稿組！"
        isPublic:
          type: boolean
          default: true
        createDate:
          type: string
          format: date-time
          example: "2016-08-29T09:12:33.001Z"
        manager:
          $ref: "#/components/schemas/User"
        members:
          type: array
          items:
            $ref: "#/components/schemas/User"
    Task:
      description: "檢核任務"
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        title:
          type: string
          example: "「React 讀書班」來切 Login Form"
        url:
          type: string
          format: url
          example: "https://www.youtube.com/watch?v=IfaTpyhaGlg"
        createDate:
          type: string
          format: date-time
          example: "2016-08-29T09:12:33.001Z"
        group:
          $ref: "#/components/schemas/Group"
        isComplete:
          type: boolean
          default: true
    Error:
      description: "error msg"
      type: object
      properties:
        type:
          type: string
          example: UNAUTHORIZED
        msg:
          type: string
          example: Permission denied
paths:
  /groups:
    post:
      summary: create group
      tags:
        - "Group"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - "name"
                - "description"
              properties:
                name:
                  type: string
                  example: 兔兔教
                description:
                  type: string
                  example: 哈囉直播字幕校稿組！
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: get group list
      tags:
        - "Group"
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: name
          description: filter name
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Group"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /groups/register:
    post:
      summary: register user of group
      tags:
        - "Group"
        - "User"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - "groupId"
              properties:
                groupId:
                  type: string
                  pattern: '^[A-Za-z0-9]{20}$'
                  example: 9q50NMFsL2XQ9wxny6Qv
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /groups/{groupId}:
    get:
      summary: get group info
      tags:
        - "Group"
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: groupId
          required: true
          description: groupId
          schema:
            type: string
            pattern: '^[A-Za-z0-9]{20}$'
            example: 9q50NMFsL2XQ9wxny6Qv
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

tags:
  - name: Group
  - name: User